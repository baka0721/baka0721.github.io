<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>别情无处说，方寸是星河</title>
  
  <subtitle>你所热爱的，就是你的生活</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-05-19T11:26:41.018Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>刘柏东</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java从入门到起飞</title>
    <link href="http://example.com/posts/916f4904.html"/>
    <id>http://example.com/posts/916f4904.html</id>
    <published>2024-05-19T10:40:18.000Z</published>
    <updated>2024-05-19T11:26:41.018Z</updated>
    
    <content type="html"><![CDATA[<p>1，把maven搞懂，以及pom文件。还有idea的maven设置，maven自己的setting文件。maven是新手的一个大坑，很多人拉了代码，跑不起来，就是maven基础太差，只会引个jar包。pom文件,还有idea的maven设置，maven自己的setting文件,就这3个东西,主要13,2也就1分钟的事。<br>maven 3板斧 1，有的文件下载了一半，就不下载了，所以去本地仓库删掉，再执行package即可。2，package过了以后，点idea的两个maven更新按钮。3，关闭idea再打开。可以解决95%的maven疑难杂症。</p><p>2，搞好idea的设置，包括颜色，快捷键，插件，快捷键代码和自定义快捷键代码。以及git，jdk版本，项目结构和各种插件的配置</p><p>3，学会破解idea，或者起码不会被卡住用不了idea</p><p>4，学会使用datagrip，可以设置字体颜色和改快捷键，破解方法和idea一致。navicat几年没用了，但是想来很难比datagrip更优异</p><p>5，学会使用apifox，这个要不了多久，最快甚至十分钟就能学会.Postman几年没用了不知道，但是比swagger强太多了</p><p>6，学会使用git的版本控制，基本的一些命令不说了。主要彻底搞明白branch切换，pull代码，commit本地,push代码，merge代码和rollback代码。还有本地修改的代码，但不想提交到远程的move to another changelist（具体忘了，好像是这个）</p><p>7，学会下载和配置mysql，redis，jdk，甚至vue的环境。jdk可以多下几个版本，8，11和最新，虽然国内大部分项目都是8，但是偶尔年轻项目也可能有11，至于更高版本的，有时候你在github上面拉开源项目，学习的时候可能会用到</p><p>8，搞懂一个基本的springboot框架，那些必须的注解和常用注解，Springcloud可以不学，会个Openfeign基本上和会springcloud差不多，反正框架又不要你搭，最多学一下nacos，也简单的一比</p><p>10，学会使用代码生成器，mybatisX</p><p>11，学会处理date，Localdatetime，enum，json，controller的result对象，理解自动插入插入时间更新时间，逻辑删除及配置，Page对象。具体展开太多太杂了,工作中多看代码别人是怎么处理的,自己慢慢思考体悟。一般这些代码都是项目或者模块通用的吧，只写一次，写一次两三个月不用写，这种代码我都是写好后保存到云，用的时候直接CV下来。差不多，一般都有自己的util类，但新手第一次要去理解一下这些东西的作用和意义的</p><p>12，学会使用easyexcel，做简单的导入导出（这里Lz推荐一个myexcel，我觉得更好用代码更优雅）。<br>复杂导入导出的话，遇到了再慢慢啃吧</p><p>13，学习使用spring data jpa，单表静态查询和二三表简单静态联查，它比mybatis舒服很多，因为他不需要写xml，可以自动生成很多单表代码，可以自动帮我们数据库建表（对，和mybatis的生成代码是反着来的，他是先定义实体类，然后运行项目数据库就会自动建表）最重要的是jpa是可以和mybatis共存的，只需要引个jar包，在实体类加几个注解，用JPA的生成器一键批量生成一下dao，另外，JPA也可以写sql，他有原生sql和hql两种模式，推荐hql，它是面向对象型的，基本看一眼就会爱上，像楼主当年一遇idea就抛弃了eclipse一样。楼主现在就是，所有简单sql用jpa，分页以及动态查询用mybatis plus，复杂SQL让chatgpt给我写xml，反正我是基本啥事都不干。 对了，jpa只要会它的基本操作就行，千万别认为他优雅高大上，去上头搞什么级联分页querydsl，这些鬼东西学习成本太高，以后有余力了再学，反正楼主是觉得搭配my和mp更实惠。只要不是严肃的大项目，爱咋玩咋玩，jpa哪怕第一次见，就算不会写，但至少看得懂是什么意思，hql也完全可以改，维护起来比mybatis轻松多了</p><p>最后，自己做一个简单的增删改查项目。自己给自己去想象需求，自己写提纲，去思考总结自己要写哪些接口，每个接口要输入输出什么<br>， 然后从数据库开始建表建字段，尽量把自己学过的知识点都用上，根据模块或流程，把自己提纲上的接口都一一实现，最后再用apifox去一一验证自己的接口。这步最重要,新手入职后短期被开基本死在这一步,拿个原型图一脸懵逼在哪里不晓得该怎么开始,然后巨大的压力扑面而来,心态稳不住就崩了.看视频的时候人家都设计好了接口,不会动脑子去深想。</p><p>15，了解下一些常用的工具包，比如date，string,file,object,collection的utils， 还有josnobject，optional，Lists等工具类</p><p>16，会用steam的基本操作，filter,map,foreach，tolist，tomap等</p><p>17，beanutils.copyproperties，可以自己封装一下给返回值，让代码量更少更优雅</p><p>18，lombok基本注解，链式调用注解accssors，去autowired注解Required argsconstructor，Log注解s1f4j。</p><p>架构需要对网络非常熟悉，网关，公网内网，各式各样的通讯协议，流量，性能。还有就是技术选型，什么样的业务场景用什么样的技术，不同的技术的优劣点在哪，还要会核算成本。比如说数据库，有关系型的，文档型的，内存型的，olap的，时序的……各种各样的东西很多的。做开源更是，你得知道什么样的东西有价值，哪些方面是开源领域目前欠缺的，才能做出高质量的开源项目。</p><p>19.学会从网页,按f12去查接口地址,入参和响应。这个其实就是要对http协议的基本结构熟悉，最起码得知道请求参数形式有哪几种，返回格式有啥样的，对应的content-type是啥，然后前端怎么写对应的是哪个content-type，后端怎么写对应的是哪个content-type</p><p>20.学会idea的debug,断点放行和跳到下一个断点,以及打断点不需要重启idea,再调一次接口就行。处理bug的主要方法就是上面19,20两个结合起来,再搭配百度和chatgpt查报错message</p><p>21.遵守3层架构的规范,代码要有边界感,controller层不写业务不调dao,service层给controller的返回值不要封装成ResultBean</p><p>22.参数校验可以学下spring的@valid,偶尔一两个也可以直接判if.具体看别人老员工的模块代码,不要乱校验什么都验,什么都验不如什么都不验</p><p>23.学会处理异常,定义异常和log的message,在关键的你觉得可能出错的地方抛异常或打log,具体同上看老员工的代码是怎么写的,也是宁缺毋滥</p><p>24.不要硬编码,除了阿拉伯数字和log异常的message</p><p>25.常量可以写接口里,更好看,接口默认public static final</p><p>26.封装copybean,可以少些1-2行代码</p><p>27.自己封装了一个lambda方式调用的if,但是不能return结束方法,只能throw<br> 这你还不如封装stream的filter呢<br> 不太理解<br> 工具方法返回一个Predicate表达式，里面写一些常用的判断逻辑，这样就可以用在stream流里了。</p><p> 28.service层统一注入所有dao和service,这样就不需要某些service类注入一大堆别的dao和service的bean了</p><p> 26 27 28这3条,我觉得你们可以当做自己的原创去面试</p><p> 29.项目有token校验的话,本地自测可以屏蔽掉,然后提交到another分支,这样不会push到远程,本地也不用管token了</p><p> 30.自定义快捷代码,$s$代表光标最后出现的位置,s可以是任何值,在这里你可以找到main sout什么的</p><p> 31.idea插件推荐<br>1.apifox helper 见名知意<br>2.codeglance pro 代码缩略图滚动条<br>3.ECTranslation2 见名知意<br>4.mybatisX mybatis生成器<br>5.JPA Support jpa生成器<br>6.rainbow brackets 彩虹括号,各种括号嵌套的时候可以设置不同的颜色<br>7.grep console 分类设置控制台输出信息的颜色<br>8.cosy 智能代码补全<br>再推荐个GsonFormatPlus 适合对接接口根据报文直接生成实体<br>我试试,这样以后除了业务service代码,什么都不要自己写了</p><p>32.工具推荐<br>1.snipaste 可以让截图一直显示在表层,不会点击别的窗口就被覆盖,用用就知道,神器<br>2.listary 电脑全局搜索软件,免费,快<br>3.bandizip 解压缩神器,具体方便在哪可以看看设置<br>4.finalshell 远程连接神器,免费,比winscp好用<br>5.todesk 远程控制神器,免费好用<br>6.notepad 程序员专用文件查看器<br>notepad没有EditPlus好用，一大堆注册码 用了永久免费，如果你是mac电脑的话, 就用sublime Text 看着太爽了, 语法高亮贼舒服<br>都有idea了为啥不试试用idea自带的ssh工具<br>这个还真不知道,final shell多窗口和文件传输快太舒服了,潜意识里认为不会有更好的免费ssh软件了<br>主要是这玩意如果测试环境服务器能自己传包打版的话，配好目录映射，打完包生成jar包右键里选择上传就能直接把包打上去。下面控制台开一个远程ssh也比较方便</p><p>33.代码尽量解耦<br>方法模块化,1个方法尽量只做一件独立的事情(3行代码以下就算了),最后在返回给controller的方法里组装起来,这样代码逻辑看起来非常清晰,修改迭代起来也简单.解耦的好,方法名取好,注释都能少写一大半</p><p>其次就是大家技术的普遍提高,以及代码生成器,mybatisplus等各种框架,大大的提高了老司机的开发效率,不夸张的说,lz现在的开发速度,是5年前的自己的3倍以上,别人估计也差不了多少,而新手对于老司机来说完全无法分担什么任务,还得花时间带影响自己的效率</p><p>lz，刚入行拿到项目不知道具体业务怎么写，不知道该写什么，该学习那方面？<br>拿到原型图,冥想,思考前端每一个按钮应该输入什么然后应该得到什么数据,然后设计表,每个接口写提纲,代码生成器生成基本代码,最后一个一个接口写下去</p><p>34.实际项目中理论上该用enum的字段很多时候可以用数字代替,注释写好就行.enum未必能提升多少可读性和可靠性,但一定能降低开发效率和体验(光想那些type该用什么单词就得纠结好久)<br>tips:mysql的tinyint(1)映射boolean类型,mysql的enum类型不支持int映射</p><p>35.学会使用泛型,不是简单的List<String>,而是能读懂适应诸如参数列表包含T ? extends super的方法,自己写公共方法时也能把T Class作为参数列表来写</p><p>36.serviceImpl中的方法,非service接口定义的一律用private修饰,会被别的类调用的写util包用public static修饰.<br>其实97%以上的service接口都是没必要的,只需要把实现类当service就行,但毕竟大家都习惯并固化下来了,就随大流吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1，把maven搞懂，以及pom文件。还有idea的maven设置，maven自己的setting文件。maven是新手的一个大坑，很多人拉了代码，跑不起来，就是maven基础太差，只会引个jar包。pom文件,还有idea的maven设置，maven自己的setting文</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>英语四六级</title>
    <link href="http://example.com/posts/47a889e1.html"/>
    <id>http://example.com/posts/47a889e1.html</id>
    <published>2024-05-17T12:47:26.000Z</published>
    <updated>2024-05-17T12:49:37.663Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhenti.burningvocabulary.com/cet4">英语四六级真题网站</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://zhenti.burningvocabulary.com/cet4&quot;&gt;英语四六级真题网站&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>白色相簿2随笔</title>
    <link href="http://example.com/posts/af144179.html"/>
    <id>http://example.com/posts/af144179.html</id>
    <published>2024-05-16T14:32:50.000Z</published>
    <updated>2024-05-17T12:47:04.510Z</updated>
    
    <content type="html"><![CDATA[<p>我大概，一辈子，都不会忘记这部作品了吧。从ic篇，cc篇，到coda篇，丸户老贼的刀法贯穿始终，他到底是怎么做到任何一条线都会胃疼，都会出现意难平。<br><img src="https://img2.imgtp.com/2024/05/17/uFrrK4oW.jpg" alt="合照"><br>个人评价:雪菜te&gt;冬马te&gt;千晶te&gt;麻理线&gt;浮气线&gt;小春线<br>个人而言最喜欢冬马，我有宗教信仰，非黑长直不可，但是雪菜te是所有人都能获得幸福的理想结局，正常人第一次进的应该都是这个结局。冬马te太痛了，男主抛弃在日本的一切，义无反顾奔向爱情的一幕令我很感动，但是放在现实中太残酷了。浮气线，男主精虫上脑，想要脚踏两条船，鼠鼠对此深恶痛绝，但不得不承认正是男主的优柔寡断才有了序章的各种名场面。<br><img src="https://img2.imgtp.com/2024/05/17/8rAHdRIC.jpg" alt="冬马绝美婚纱图"><br><img src="https://img2.imgtp.com/2024/05/17/TYKJbpYP.jpg" alt="冬马绝美图"><br><img src="https://img2.imgtp.com/2024/05/17/HLg7wUjL.jpg" alt="雪菜美图"><br><img src="https://img2.imgtp.com/2024/05/17/zwhs5TCM.jpg" alt="雪菜美图"><br>第一个帖子以白色相簿2开头，之后会陆续上传贴吧大佬的解读。<br><a href="https://www.bilibili.com/video/BV1EN4y147yZ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=12fdc9884759acf6187aa1dc18935832">入坑指南,点它</a><br>另外，左下角的音乐是白色相簿2ost，<strong>望周知</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我大概，一辈子，都不会忘记这部作品了吧。从ic篇，cc篇，到coda篇，丸户老贼的刀法贯穿始终，他到底是怎么做到任何一条线都会胃疼，都会出现意难平。&lt;br&gt;&lt;img src=&quot;https://img2.imgtp.com/2024/05/17/uFrrK4oW.jpg&quot; a</summary>
      
    
    
    
    
  </entry>
  
</feed>
